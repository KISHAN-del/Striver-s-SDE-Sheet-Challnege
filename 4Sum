vector<vector<int>> fourSum(vector<int>& nums, int tgt) {
     vector<vector<int>>ans;
      int n=nums.size();
      sort(nums.begin(),nums.end());
      int i=0,j,k,l;
  while(i<=n-4)
  {
    j=i+1;
    while(j<=n-3)
    {
      l=j+1;
      k=n-1;
      long long t=(long long)(tgt-(long long)(nums[i]+nums[j]));
      while(l<k)
      {
         if(nums[l]+nums[k]==t)
          {
             vector<int>temp;
              temp.push_back(nums[i]);
              temp.push_back(nums[j]);
              temp.push_back(nums[l]);
              temp.push_back(nums[k]);
              ans.push_back(temp);
              temp.clear();
            while(l<k and nums[l]==nums[l+1])l++;
            while(l<k and nums[k]==nums[k-1])k--;
              l++;k--;
          }
          else if(nums[l]+nums[k]<t)l++;
          else k--;
      }

        while(j<=n-3 and nums[j]==nums[j+1])j++;
        j++;
    }
        while(i<=n-3 and nums[i]==nums[i+1])i++;
        i++; 
  }
    
    return ans;
   
    
}
