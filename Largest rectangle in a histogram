#include<bits/stdc++.h>


 int largestRectangle(vector < int > & nums) {
   // Write your code here.
           int n=nums.size();
        if(n==1)return nums[0];



         stack<int>st;
        vector<int>ps(n,-1);
        
        for(int i=0;i<n;){
            if(st.empty())st.push(i++);
            while(!st.empty() and nums[st.top()]>=nums[i]){
                st.pop();
            }
            if(!st.empty())
            ps[i]=st.top();
            st.push(i);
            i++;
            
            
            
        }
        
        // ans[0]=-1;
      while(!st.empty())st.pop();
        


        // stack<int>st;
        vector<int>ns(n,n);
        for(int i=0;i<n;)
        {
            
                while(!st.empty() and nums[st.top()]>nums[i])
            {
               ns[st.top()]=i;
               st.pop();
            
            }
            
            st.push(i);
            i++;
            
        
        }
        // vector<int>ps=ls(heights,n);
        
        int   ans=0,p;
     for(int i=0;i<n;i++)
     {
         
        //  if(i==0)p=ns[i]-i+1;
        //  if(i==n-1)p=i-ps[i];
        // //  cout<<ns[i]<<" "<<ps[i]<<endl;
        //   p=((ns[i]-i-1)+(i-ps[i]-1)+1);
        p=ns[i]-ps[i]-1;
          if(ans<(p*nums[i]))
      ans=p*nums[i];
     }



      
       

return ans;



 }
